{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-02T02:01:22.789Z",
    "end": "2024-10-02T02:01:38.622Z",
    "duration": 15833,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "037cccae-8d90-48aa-98a4-8c8006728d2d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82b5448a-cf80-4137-bed3-1a2dd4d35de4",
          "title": "add todo test",
          "fullFile": "/Users/renzlauren/Desktop/seleniumDemo/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add todo test\"",
              "fullTitle": "add todo test \"before each\" hook in \"add todo test\"",
              "timedOut": null,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "ltCapabilities.capability[\"LT:Options\"].name = this.currentTest.title; // specify test scenario\ndriver = new Builder()\n.usingServer(gridURL)\n.withCapabilities(ltCapabilities.capability)\n.build();",
              "err": {},
              "uuid": "6e0d2e79-0eab-4bd0-a720-f5ad5a2f5abd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo test successfully adds a todo to application",
              "timedOut": null,
              "duration": 8210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Dynamically import chai\n        const chai = await import(\"chai\");\n        const should = chai.should();\n        // launch browser\n        // let driver = await new Builder().forBrowser(\"chrome\").build();\n        try {\n            // navigate to application\n            await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n            // add a todo entry\n            await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n            // assert\n            let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n                return value;\n            });\n            // assert using chai should\n            todoText.should.equal(\"Learn Selenium\");\n            // close the browser if no error occurs\n            await driver.quit();\n        } catch (error) {\n            // Log the error for debugging\n            console.error(\"Error during test execution:\", error);\n            // Rethrow the error to ensure the test fails properly\n            throw error;\n        }",
              "err": {},
              "uuid": "8c78c192-e7c7-4adc-9247-e3bb3162f5d9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c78c192-e7c7-4adc-9247-e3bb3162f5d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8210,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "dc4fc3e7-b6fe-422a-b611-ce09ab6b32a3",
          "title": "add another todo test",
          "fullFile": "/Users/renzlauren/Desktop/seleniumDemo/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add another todo test\"",
              "fullTitle": "add another todo test \"before each\" hook in \"add another todo test\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "ltCapabilities.capability[\"LT:Options\"].name = this.currentTest.title; // specify test scenario\ndriver = new Builder()\n.usingServer(gridURL)\n.withCapabilities(ltCapabilities.capability)\n.build();",
              "err": {},
              "uuid": "b56bb9c7-190e-46e4-84a8-20e274fd65a4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add another todo test\"",
              "fullTitle": "add another todo test \"after each\" hook in \"add another todo test\"",
              "timedOut": null,
              "duration": 201,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "4477494b-0941-4d12-a9ee-0be98542fec9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add another todo test successfully adds another todo to application",
              "timedOut": null,
              "duration": 7862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chai = await import(\"chai\");\nconst should = chai.should();\n// let driver = await new Builder().forBrowser(\"chrome\").build();\ntry {\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value;\n    });\n    todoText.should.equal(\"Learn Selenium\");\n} catch (error) {\n    console.error(\"Error during test execution:\", error);\n    throw error;  // Ensure Mocha catches the failure\n}",
              "err": {},
              "uuid": "0acb2265-5288-4021-ad48-b9df647f5fa7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Learn JavaScript",
              "fullTitle": "add another todo test Learn JavaScript",
              "timedOut": null,
              "duration": 7112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chai = await import(\"chai\");\nconst should = chai.should();\n// let driver = await new Builder().forBrowser(\"chrome\").build();\ntry {\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn JavaScript\", Key.RETURN);\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value;\n    });\n    todoText.should.equal(\"Learn JavaScript\"); \n} catch (error) {\n    console.error(\"Error during test execution:\", error);\n    throw error;  // Rethrow error to fail the test\n}",
              "err": {},
              "uuid": "1285c5c3-fab1-4878-ade4-48fcc0f2fcdf",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0acb2265-5288-4021-ad48-b9df647f5fa7",
            "1285c5c3-fab1-4878-ade4-48fcc0f2fcdf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14974,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/renzlauren/Desktop/seleniumDemo/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}